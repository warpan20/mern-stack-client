{"version":3,"sources":["actions/api.js","actions/postMessage.js","components/useForm.js","components/PostMessageForm.js","components/PostMessages.js","reducers/postMessage.js","reducers/index.js","actions/store.js","App.js","index.js"],"names":["baseUrl","url","fetchAll","axios","get","fetchById","id","create","newRecord","post","update","updatedRecord","put","delete","ACTION_TYPES","useForm","initialFieldValues","setCurrentId","useState","values","setValues","errors","setErrors","handleInputChange","e","target","name","value","resetForm","title","message","mapActionToProps","createPostMessage","data","onSuccess","dispatch","api","then","res","type","payload","catch","err","console","log","updatePostMessage","connect","state","postMessageList","postMessage","list","withStyles","theme","root","margin","spacing","form","display","flexWrap","justifyContent","postBtn","width","classes","props","useEffect","currentId","find","x","_id","autoComplete","noValidate","className","onSubmit","preventDefault","ButterToast","raise","content","Crisp","scheme","Cinnamon","SCHEME_PURPLE","icon","AssignmentTurnedIn","temp","Object","every","validate","TextField","variant","label","fullWidth","onChange","error","helperText","multiline","rows","Button","color","size","fetchAllPostMessages","deletePostMessage","paper","padding","smMargin","actionDiv","textAlign","Grid","container","item","xs","Paper","List","map","record","index","key","ListItem","ListItemText","Typography","onClick","window","confirm","DeleteSweep","Divider","component","initialState","reducers","combineReducers","action","filter","store","createStore","compose","applyMiddleware","thunk","App","Container","maxWidth","AppBar","position","align","vertical","POS_TOP","horizontal","POS_RIGHT","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d5fb63e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = 'https://mern-stack-api-warpan.herokuapp.com/'\r\n\r\nexport default {\r\n    postMessage(url = baseUrl + 'postmessages/') {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            fetchById: id => axios.get(url + id),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n}","import api from \"./api.js\";\r\n\r\nexport const ACTION_TYPES = {\r\n    CREATE: 'CREATE',\r\n    UPDATE: 'UPDATE',\r\n    DELETE: 'DELETE',\r\n    FETCH_ALL: 'FETCH_ALL'\r\n}\r\n\r\nexport const fetchAll = () => dispatch => {\r\n    api.postMessage().fetchAll()\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACTION_TYPES.FETCH_ALL,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n}\r\n\r\nexport const create = (data, onSuccess) => dispatch => {\r\n    api.postMessage().create(data)\r\n        .then(res =>{\r\n            dispatch({\r\n                type: ACTION_TYPES.CREATE,\r\n                payload: res.data\r\n            })\r\n            onSuccess()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const update = (id,data, onSuccess) => dispatch => {\r\n    api.postMessage().update(id,data)\r\n        .then(res =>{\r\n            dispatch({\r\n                type: ACTION_TYPES.UPDATE,\r\n                payload: res.data\r\n            })\r\n            onSuccess()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const Delete = (id, onSuccess) => dispatch => {\r\n    api.postMessage().delete(id)\r\n        .then(res =>{\r\n            dispatch({\r\n                type: ACTION_TYPES.DELETE,\r\n                payload: id\r\n            })\r\n            onSuccess()\r\n        })\r\n        .catch(err => console.log(err))\r\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nconst useForm = (initialFieldValues,setCurrentId) => {\r\n\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const resetForm =() =>{\r\n        setValues(initialFieldValues)\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    };\r\n}\r\n\r\nexport default useForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TextField, withStyles, Button } from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/postMessage\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { AssignmentTurnedIn } from \"@material-ui/icons\";\r\n\r\nconst initialFieldValues = {\r\n    title: '',\r\n    message: ''\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1)\r\n        },\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    },\r\n    postBtn: {\r\n        width: \"50%\"\r\n    }\r\n})\r\n\r\nconst PostMessageForm = ({ classes, ...props }) => {\r\n\r\n    useEffect(() => {\r\n        if (props.currentId != 0){\r\n            setValues({\r\n                ...props.postMessageList.find(x => x._id == props.currentId)\r\n            })\r\n            setErrors({})\r\n        }\r\n    }, [props.currentId])\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.title = values.title ? \"\" : \"This field is required.\"\r\n        temp.message = values.message ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    var {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues,props.setCurrentId)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        const onSuccess = () => {\r\n            ButterToast.raise({\r\n                content: <Cinnamon.Crisp title=\"Post Box\"\r\n                    content=\"Submitted successfully\"\r\n                    scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                    icon={<AssignmentTurnedIn />}\r\n                />\r\n            })\r\n            resetForm()\r\n        }\r\n        if (validate()) {\r\n            if (props.currentId == 0)\r\n                props.createPostMessage(values, onSuccess)\r\n            else\r\n                props.updatePostMessage(props.currentId, values, onSuccess)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`}\r\n            onSubmit={handleSubmit}>\r\n            <TextField\r\n                name=\"title\"\r\n                variant=\"outlined\"\r\n                label=\"Title\"\r\n                fullWidth\r\n                value={values.title}\r\n                onChange={handleInputChange}\r\n                {...(errors.title && { error: true, helperText: errors.title })}\r\n            />\r\n            <TextField\r\n                name=\"message\"\r\n                variant=\"outlined\"\r\n                label=\"Message\"\r\n                fullWidth\r\n                multiline\r\n                rows={4}\r\n                value={values.message}\r\n                onChange={handleInputChange}\r\n                {...(errors.message && { error: true, helperText: errors.message })}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                className={classes.postBtn}\r\n            >Submit</Button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    postMessageList: state.postMessage.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    createPostMessage: actions.create,\r\n    updatePostMessage: actions.update\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessageForm));","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/postMessage\";\r\nimport { Grid, Paper, withStyles, List, ListItem, ListItemText, Typography, Divider, Button } from \"@material-ui/core\";\r\nimport PostMessageForm from \"./PostMessageForm\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { DeleteSweep } from \"@material-ui/icons\";\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        margin: theme.spacing(3),\r\n        padding: theme.spacing(2)\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    actionDiv: {\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\nconst PostMessages = ({ classes, ...props }) => {\r\n    //const {classes, ...props} = props\r\n    const [currentId, setCurrentId] = useState(0)\r\n\r\n    useEffect(() => {\r\n        props.fetchAllPostMessages()\r\n    }, [])//DidMount\r\n\r\n    const onDelete = id => {\r\n        const onSuccess = () => {\r\n            ButterToast.raise({\r\n                content: <Cinnamon.Crisp title=\"Post Box\"\r\n                    content=\"Deleted successfully\"\r\n                    scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                    icon={<DeleteSweep />}\r\n                />\r\n            })\r\n        }\r\n        if (window.confirm('Are you sure to delete this record?'))\r\n            props.deletePostMessage(id,onSuccess)\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={5}>\r\n                <Paper className={classes.paper}>\r\n                    <PostMessageForm {...{ currentId, setCurrentId }} />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n                <Paper className={classes.paper}>\r\n                    <List>\r\n                        {\r\n                            props.postMessageList.map((record, index) => {\r\n                                return (\r\n                                    <Fragment key={index}>\r\n                                        <ListItem>\r\n                                            <ListItemText>\r\n                                                <Typography variant=\"h5\">\r\n                                                    {record.title}\r\n                                                </Typography>\r\n                                                <div>\r\n                                                    {record.message}\r\n                                                </div>\r\n                                                <div className={classes.actionDiv}>\r\n                                                    <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n                                                        className={classes.smMargin}\r\n                                                        onClick={() => setCurrentId(record._id)}>\r\n                                                        Edit\r\n                                                    </Button>\r\n                                                    <Button variant=\"contained\" color=\"secondary\" size=\"small\"\r\n                                                        className={classes.smMargin}\r\n                                                        onClick={() => onDelete(record._id)}>\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </ListItemText>\r\n                                        </ListItem>\r\n                                        <Divider component=\"li\" />\r\n                                    </Fragment>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    postMessageList: state.postMessage.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllPostMessages: actions.fetchAll,\r\n    deletePostMessage: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessages));\r\n","import { ACTION_TYPES } from \"../actions/postMessage\";\r\n\r\nconst initialState = {\r\n    list: []\r\n}\r\n//postMessage.list\r\nexport const postMessage = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.FETCH_ALL:\r\n            return {\r\n                ...state,\r\n                list: [...action.payload]\r\n            }\r\n        case ACTION_TYPES.CREATE:\r\n            return {\r\n                ...state,\r\n                list: [...state.list, action.payload]\r\n            }\r\n        case ACTION_TYPES.UPDATE:\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x => x._id == action.payload._id ? action.payload : x)\r\n            }\r\n\r\n        case ACTION_TYPES.DELETE:\r\n            return {\r\n                ...state,\r\n                list:state.list.filter(x => x._id != action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { postMessage } from \"./postMessage\";\r\n\r\nexport const reducers = combineReducers({\r\n    postMessage\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)","import React from 'react';\r\nimport './App.css';\r\nimport { Provider } from \"react-redux\";\r\nimport PostMessages from \"./components/PostMessages\";\r\nimport { store } from \"./actions/store\";\r\nimport { Container, AppBar, Typography } from \"@material-ui/core\";\r\nimport ButterToast,{ POS_RIGHT,POS_TOP } from \"butter-toast\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Container maxWidth=\"lg\">\r\n        <AppBar position=\"static\" color=\"inherit\">\r\n          <Typography\r\n            variant=\"h2\"\r\n            align=\"center\">\r\n            Post Box\r\n          </Typography>\r\n        </AppBar>\r\n        <PostMessages />\r\n        <ButterToast position={{vertical:POS_TOP,horizontal:POS_RIGHT}}/>\r\n      </Container>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}